{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/products": {
            "get": {
                "description": "Get  a list of all products in the warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "List all products",
                "responses": {
                    "200": {
                        "description": "List of products",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "List retrieval failed",
                        "schema": {
                            "$ref": "#/definitions/rest.BaseResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new product to the warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Create a new product",
                "parameters": [
                    {
                        "description": "Product info",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.ProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns ID of created product",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input or business rule failed",
                        "schema": {
                            "$ref": "#/definitions/rest.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/rest.BaseResponse"
                        }
                    }
                }
            }
        },
        "/products/{id}": {
            "get": {
                "description": "Retrieve a single product from the warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Get product by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/rest.BaseResponse"
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "schema": {
                            "$ref": "#/definitions/rest.BaseResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update product information in the warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Update product by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated product info",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rest.ProductRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/rest.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input or business rule failed",
                        "schema": {
                            "$ref": "#/definitions/rest.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Update failed",
                        "schema": {
                            "$ref": "#/definitions/rest.BaseResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a product from the warehouse",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "products"
                ],
                "summary": "Delete product by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/rest.BaseResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid ID",
                        "schema": {
                            "$ref": "#/definitions/rest.BaseResponse"
                        }
                    },
                    "500": {
                        "description": "Delete failed",
                        "schema": {
                            "$ref": "#/definitions/rest.BaseResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rest.BaseResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errorCode": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "rest.ProductRequest": {
            "type": "object",
            "required": [
                "description",
                "name",
                "price",
                "quantity"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "maxLength": 1000
                },
                "name": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 2
                },
                "price": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        }
    }
}